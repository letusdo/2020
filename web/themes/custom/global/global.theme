<?php

/*
 * Implements theme_preprocess_page().
 *
 */

function global_preprocess_page(&$variables) {
  $variables['global_facebook'] = theme_get_setting('global_facebook');
  $variables['global_twitter'] = theme_get_setting('global_twitter');
  $variables['global_youtube'] = theme_get_setting('global_youtube');
  $variables['global_instagram'] = theme_get_setting('global_instagram');
  $variables['global_github'] = theme_get_setting('global_github');
  $variables['global_contact_email'] = theme_get_setting('global_contact_email');
	$variables['global_contact_phone'] = theme_get_setting('global_contact_phone');
	$variables['global_open_hours'] = theme_get_setting('global_open_hours');
	$variables['global_address'] = theme_get_setting('global_address');

}

/**
 * Implements hook_preprocess_menu().
 */
function global_preprocess_menu(&$variables, $hook) {
  if ($hook == 'menu__main') { // We're doing that for main menu.
    // Get the current path.
    $current_path = \Drupal::request()->getRequestUri();
    $items = $variables['items'];
    foreach ($items as $key => $item) {
      // If path is current_path, set active to li.
      if ($item['url']->toString() == $current_path) {
        // Add active link.
        $variables['items'][$key]['attributes']['class'] = 'active';
      }
    }
  }
}
/*****
      implemented taxonomy term value
*****/

function global_preprocess_views_view(&$variables) {

  if ($variables['id'] == 'services') {
    $query = \Drupal::entityQuery('taxonomy_term');
      $query->condition('vid', "service_catalog");
      $tids = $query->execute();
      $terms = \Drupal\taxonomy\Entity\Term::loadMultiple($tids);
     //  foreach ($terms as $term) {
      //   $service_catalog[] = $term->get('name')->getString();
      // }
      $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
      foreach($tids as $key=>$val) {
         $taxonomy_term = \Drupal\taxonomy\Entity\Term::load($val);
         $taxonomy_term_trans = \Drupal::service('entity.repository')->getTranslationFromContext($taxonomy_term, $language);

         $service_catalog[] = $taxonomy_term_trans->name->value;
         echo $service_catalog[0];
      }
    $variables['service_catalog'] = $service_catalog;
  }
//echo $service_catalog[1];
      /*$language = \Drupal::languageManager()->getCurrentLanguage()->getId();
      $variables['current_language'] = $language;*/

}

/*
$query = \Drupal::entityQuery('taxonomy_term');
     $query->condition('vid', "service_catalog");
     $tids = $query->execute();

     $taxname_array = array();

     foreach($tids as $key=>$val) {
     $taxonomy_term = \Drupal\taxonomy\Entity\Term::load($val);
     $taxonomy_term_trans = \Drupal::service('entity.repository')->getTranslationFromContext($taxonomy_term, 'fr');

     array_push($taxname_array, $taxonomy_term_trans->name->value);
   }

   echo '<pre>';
   print_r($taxname_array);die;
   die;*/

function global_preprocess_node(&$variables) {

  $node_object = $variables['node'];
  $node_type = $node_object->getType();
  $nid = $node_object->id();
// var_dump($node_type);
// var_dump($nid);

  if ($node_type == 'services') {
    $body_text = $node_object->get('body')->getValue();

    $node = &$variables['node'];
    $body =  $node_object->body->value;
    $node_array = $node->toArray();

    if(empty($node_array['body'][0]['summary'])) {
      $body_trimmed_text = substr(html_entity_decode(strip_tags($body_text[0]['value'])) ,0,270);
    }
    else {
      $body_trimmed_text = $node_array['body'][0]['summary'];
    }
    $variables['body_trimmed_text'] = $body_trimmed_text;
    $variables['body_remaining_text'] = $body_text;
    $variables['body'] = $body;
//    $blog_author_view = views_embed_view('blog_author_content', 'block_1', $nid);
//    $variables['blog_author_view'] = drupal_render($blog_author_view);
  }


}
function global_preprocess_views_view_unformatted(&$var){
  static $counter = 0;
  $vars['counter'] = $counter++;
  $view = $var["view"];
  $id = $view->id();

  if ($id == 'training') {
    $var['view_title'] = [
      '#markup' => $view->getTitle(),
    ];

  }
}

